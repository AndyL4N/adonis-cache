"use strict";
/*
* @adonisjs/ace
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fancy_logs_1 = __importDefault(require("@poppinss/fancy-logs"));
const CommandFlagException_1 = require("../Exceptions/CommandFlagException");
const InvalidCommandException_1 = require("../Exceptions/InvalidCommandException");
const CommandArgumentException_1 = require("../Exceptions/CommandArgumentException");
/**
 * Handles the command errors and prints them to the console.
 */
function handleError(error, callback) {
    if (error instanceof CommandArgumentException_1.CommandArgumentException) {
        fancy_logs_1.default.error(`Missing argument "${error.argumentName}"`);
        return;
    }
    if (error instanceof CommandFlagException_1.CommandFlagException) {
        const message = `Expected "${error.argumentName}" to be a valid "${error.exceptedType}"`;
        fancy_logs_1.default.error(message);
        return;
    }
    if (error instanceof InvalidCommandException_1.InvalidCommandException) {
        fancy_logs_1.default.error(`"${error.commandName}" is not a registered command`);
        return;
    }
    if (typeof (callback) === 'function') {
        callback(error, fancy_logs_1.default);
    }
    else {
        fancy_logs_1.default.fatal(error);
    }
}
exports.handleError = handleError;
